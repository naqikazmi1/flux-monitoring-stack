apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: opentelemetry-collector
  namespace: monitoring
spec:
  releaseName: opentelemetry-collector
  maxHistory: 3
  interval: 1m0s
  suspend: false
  chart:
    spec:
      chart: opentelemetry-collector
      version: "0.111.1"
      sourceRef:
        kind: HelmRepository
        name: open-telemetry-charts
        namespace: flux-system
  values:
    nodeSelector:
      category: tools
      affinity: multi-zones
    image:
      repository: otel/opentelemetry-collector-contrib
      tag: 0.120.0
    mode: deployment
    clusterRole:
      create: true
      name: "opentelemetry-collector-admin"
      rules:
      - verbs: ["*"]
        resources: ["*"]
        apiGroups: ["*"]
      - verbs: ["*"]
        nonResourceURLs: ["*"]
      clusterRoleBinding:
        name: "opentelemetry-collector-admin"
    serviceAccount:
      create: true
      name: "opentelemetry-collector-admin"
    extraEnvs:
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
    hostNetwork: false
    config:
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
      connectors:
        spanmetrics:
          namespace: span.metrics
      exporters:
        debug:
          verbosity: detailed
        otlphttp:
          endpoint: "http://jaeger-collector.monitoring.svc.cluster.local:4318"
          tls:
            insecure: true
            insecure_skip_verify: true
        prometheusremotewrite:
          endpoint: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090/api/v1/write
          target_info:
            enabled: true
      service:
        telemetry:
          logs:
            level: "debug"
          metrics:
            level: "detailed"
        pipelines:
          traces:
            receivers:
              - otlp
            exporters:
              - otlphttp
              - spanmetrics
              - debug
          metrics:
            receivers:
              - spanmetrics
            exporters:
              - debug
              - prometheusremotewrite
    ports:
      metrics:
        enabled: true
      prometheus: 
        enabled: true 
        protocol: TCP 
        containerPort: 9090 
        servicePort: 9090 
        hostPort: 9090 
    service:
      enabled: true
    ingress:
      enabled: false
    serviceMonitor:
      enabled: true
      extraLabels:
        prometheusScrape: "true"
    resources:
      limits:
        cpu: 500m
        memory: 1048Mi
      requests:
        cpu: 250m
        memory: 1048Mi
